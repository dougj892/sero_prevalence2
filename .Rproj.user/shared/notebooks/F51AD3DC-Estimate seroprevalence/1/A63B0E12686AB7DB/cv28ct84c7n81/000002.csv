"0",""
"0","# Note that my definition of predict is more like ""fitted"""
"0","posterior_predict_sero_noise <- function(i, draws, ...) {"
"0","  draws$dpars$mu[, i]"
"0","}"
"0",""
"0","# test out the predict function on existing data"
"0","test <- predict(fit2)"
"0",""
"0",""
"0","# Generate predictions using the poststrat data"
"0","posterior_prob <- predict(fit2, newdata = poststrat, allow_new_levels = TRUE)"
"0",""
"0","# Use pt_hat to generate overall prediction"
"0","poststrat_prob <- posterior_prob[,1] %*% poststrat$N / sum(poststrat$N)"
"0","glue(""The not-so-simple estimate of prevalence using BRMS is {round(poststrat_prob, 3)}"")"
"1","The not-so-simple estimate of prevalence using BRMS is 0.346"
"1","
"
"0","  "
"0","# Look at the estimated effects just for men"
"0","male_estimate <- posterior_prob[poststrat$male==1,1]%*% poststrat$N[poststrat$male==1] / sum(poststrat$N[poststrat$male==1])"
"0","glue(""The not-so-simple estimate of prevalence among men using BRMS is {round(male_estimate, 3)}"")"
"1","The not-so-simple estimate of prevalence among men using BRMS is 0.427"
"1","
"
"0","# Unclear how to generate credible intervals for these quantities.  Ideally, brms would spit out draws of mu and then, for each vector of draws of mu, I could draw from the binomial using N_h, the vector of stratum sizes.  Unclear how to get the draws of mu from brms right now."
"0",""
"0",""
"0",""
"0",""
