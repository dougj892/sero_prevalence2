"0","library(tidyverse); library(rstan); library(glue); library(brms); library(caret); library(tidybayes)"
"0","path <- ""C:/Users/dougj/Documents/code/sero_prevalence2"""
"0","source(file.path(path, ""functions"", ""simulate_mrp_data_w_noise_random.R""))"
"0",""
"0","sero_sim <- simulate_mrp_data(n=1000)"
"0","sample <- sero_sim[['sample']]"
"0","poststrat <- sero_sim[['poststrat']]"
"0","true_popn <- sero_sim[['true_popn']]"
"0",""
"0","# Data from evaluation of antibody test on samples with disease and negative controls "
"0","tp <- 90  # true positives - disease samples with correct test output"
"0","fn <- 10  # false negatives - disease samples with incorrect test output"
"0","tn <- 95  # true negatives - negative controls with correct test output"
"0","fp <- 5   # false positives - negative controls with incorrect test output"
"0",""
"0",""
"0","#set.seed(8675309)"
"0","se <- rbeta(1, tp, fn)"
"0","sp <- rbeta(1, tn, fp)"
"0","glue(""Sensivity: {round(se, 2)}"")"
"1","Sensivity: 0.91"
"1","
"
"0","glue(""Specificity: {round(sp, 2)}"")"
"1","Specificity: 0.92"
"1","
"
"0","# Create binary vectors for whether the antibody test would give the correct result"
"0","# (Creating two vectors saves time because the assignment can then be easily vectorized)"
"0","pos_correct <- rbinom(n = 1000, size = 1, prob = se)"
"0","neg_correct <- rbinom(n = 1000, size = 1, prob = sp)"
"0",""
"0","sample$test <- sample$cat_pref*pos_correct+(1-sample$cat_pref)*(1-neg_correct)"
"0",""
"0","true_popn_pref <- sum(true_popn$cat_pref * poststrat$N) / sum(poststrat$N)"
"0","glue(""The true prevalence is {round(true_popn_pref, 3)}"")"
"1","The true prevalence is 0.822"
"1","
"
